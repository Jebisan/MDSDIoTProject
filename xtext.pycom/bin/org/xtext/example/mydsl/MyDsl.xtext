grammar xtext.Pycom with org.eclipse.xtext.common.Terminals
generate pycom "http://www.Pycom.xtext"
	
System:
	boards+=Board* servers+=Server*;
	
Server:
	'Server' name=ID '('conn=Connection')' '{' exps+=ConditionalAction* '}' 
;

Connection:
	host=Host ',' portnumber=Port 
;

Host:
	ipAdr= Ipaddress | website=STRING
;

Ipaddress:
	INT'.'INT'.'INT'.'INT
;

Port:
	INT
;

Board:
	'Board' name=ID '{' boardMembers+=BoardMember* '}';

BoardMember:
	Sensor | Actuator | Communication;

ConditionalAction:
	type='if' '(' condition=Condition ')' '{' ExpMembers+=ExpMember* '}' | type='while' '(' condition=Condition ')' '{' ExpMembers+=ExpMember* '}';

ExpMember:
	Function | ConditionalAction;

Sensor:
	'Sensor' sensorTypes+=SensorType (',' sensorTypes+=SensorType)*;

Actuator:
	'Actuator' actuatorTypes+=ActuatorType (',' actuatorTypes+=ActuatorType)*;

Communication:
	'Communication' ':' type=('WiFi' | 'Bluetooth' | 'SigFox');

ActuatorType returns ModuleType:
	{ActuatorType} typeName=ActuatorName ':' name=ID ('(' pins=Pin ')')?;

SensorType returns ModuleType:
	{SensorType} typeName=SensorName ':' name=ID ('(' pins=Pin ')')?;

SensorName:
	'Light' | 'Temperature' | 'Barometer' | 'Humidity' | 'Accelerometer';

Pin:
	power=PinName ',' input=PinName;
	
PinName:
	name=ID
;

ActuatorName:
	'LED' | 'Engine';

Condition:
	logicEx=LogicExp | logicEx=LogicExp operator='&&' nestedCondition=Condition | logicEx=LogicExp operator='||' nestedCondition=Condition;

LogicExp:
	boolVal=Boolean | compExp=ComparisonExp;
	
Boolean:
	value='true' | value='false';
	
ComparisonExp: 
	left=Expression op=Operator right=Expression 	
;

Expression:
	outputValue=INT | outputfunction=Function
;

Operator:
	'<' | '<=' | '==' | '>=' | '>' | '!=';
	
Number: 
	INT
;
	
Function: 
	ModuleFunction | board=[Board] '.' functionName=FunctionName
;
	
ModuleFunction: 
	board=[Board] '.' moduleType=[ModuleType] '.' functionName=FunctionName
;
	
FunctionName:
	name=ID
;