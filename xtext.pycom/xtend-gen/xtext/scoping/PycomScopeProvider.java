/**
 * generated by Xtext 2.16.0
 */
package xtext.scoping;

import com.google.common.base.Objects;
import java.util.List;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EReference;
import org.eclipse.xtext.EcoreUtil2;
import org.eclipse.xtext.scoping.IScope;
import org.eclipse.xtext.scoping.Scopes;
import xtext.pycom.Board;
import xtext.pycom.ModuleFunction;
import xtext.pycom.ModuleType;
import xtext.pycom.PycomPackage;
import xtext.scoping.AbstractPycomScopeProvider;

/**
 * This class contains custom scoping description.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#scoping
 * on how and when to use it.
 */
@SuppressWarnings("all")
public class PycomScopeProvider extends AbstractPycomScopeProvider {
  @Override
  public IScope getScope(final EObject context, final EReference reference) {
    if (((context instanceof ModuleFunction) && Objects.equal(reference, PycomPackage.Literals.MODULE_FUNCTION__MODULE_TYPE))) {
      final Board board = ((ModuleFunction) context).getBoard();
      final List<ModuleType> candidates = EcoreUtil2.<ModuleType>getAllContentsOfType(board, ModuleType.class);
      return Scopes.scopeFor(candidates);
    }
    return super.getScope(context, reference);
  }
}
